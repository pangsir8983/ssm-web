<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd">

    <!--上面的xsd最好和当前使用的Spring版本号一致,如果换了Spring版本,这个最好也跟着改-->

    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
    <!-- http://jinnianshilongnian.iteye.com/blog/1762632 -->
    <context:component-scan base-package="com.**.controller" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>

    <!-- 解析json请求数据，将json转换为java对象 -->
    <bean id="mappingJackson2HttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <!-- 这里顺序不能反，一定先写text/html，不然ie下出现下载提示 -->
                <value>text/html;charset=UTF-8</value>
                <value>text/json;charset=UTF-8</value>
                <value>application/json;charset=UTF-8</value>
            </list>
        </property>

    </bean>

    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="mappingJackson2HttpMessageConverter" />
            </list>
        </property>
    </bean>
    <!-- 用于使用@ResponseBody后返回中文避免乱码 -->
    <bean id="stringHttpMessageConverter"
          class="org.springframework.http.converter.StringHttpMessageConverter">
        <!-- 用于避免响应头过大 -->
        <property name="writeAcceptCharset" value="false"/>
        <property name="supportedMediaTypes">
            <list>
                <value>text/plain;charset=UTF-8</value>
                <value>text/html;charset=UTF-8</value>
                <value>application/json;charset=UTF-8</value>
            </list>
        </property>
    </bean>

    <!-- 启动SpringMVC注解 -->
    <mvc:annotation-driven >
        <mvc:message-converters>
            <ref bean="mappingJackson2HttpMessageConverter"/>
            <ref bean="stringHttpMessageConverter"/>
        </mvc:message-converters>

    </mvc:annotation-driven>


    <!-- 排除静态资源 -->
    <!-- 第一种方式 -->
    <mvc:default-servlet-handler />


    <mvc:resources mapping="/js/**" location="/WEB-INF/resource/"/>
    <mvc:resources mapping="/css/**" location="/WEB-INF/resource/"/>
    <mvc:resources mapping="/image/**" location="/WEB-INF/resource/"/>
    <!-- 过滤文件的上传路径
    <mvc:resources mapping="/upload/**" location="/attachment/"/>
    -->
    <!-- 网站图标，注意 ！favicon.ico 放在 webapp 目录
    <mvc:resources mapping="/favicon.ico" location="/favicon.ico" />
    -->

    <!-- 简单测试,这里应该配置多种视图,为以后扩展使用 -->

    <!-- 配置JSP的视图解析器 -->
    <!--可为空,方便实现自已的依据扩展名来选择视图解释类的逻辑  -->
    <bean id="jspViewResolver"
          class="org.springframework.web.servlet.view.InternalResourceViewResolver"
          p:prefix="/WEB-INF/" p:suffix=".jsp"
          p:viewClass="org.springframework.web.servlet.view.JstlView" />

    <!-- 配置上传 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
          p:defaultEncoding="UTF-8" p:maxUploadSize="10485760"
          p:maxInMemorySize="4096" p:uploadTempDir="temp" />



    <!-- 简单统一异常处理 -->
    <bean id="simpleMappingExceptionResolver"
          class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <!-- 默认异常显示页面 -->
        <property name="defaultErrorView" value="error/error" />
        <!-- 通过那个属性获取异常信息 -->
        <property name="exceptionAttribute" value="ex" />
        <!-- 设置异常映射 -->
        <property name="exceptionMappings">
            <props>
                <!-- 自定义异常，可根据系统要求自行扩展异常 -->
                <prop key="com.pangsir.app.basic.exception.AppException">error/app</prop>
            </props>
        </property>
    </bean>


    <!-- 拦截器[暂时不配置] -->
</beans>