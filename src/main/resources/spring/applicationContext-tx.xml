<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

    <!-- 配饰事务管理器 数据的完整性和一致性 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- 可以启动事务注解 -->
    <!--
    proxy-target-class="true"
    注意：proxy-target-class属性值决定是基于接口的还是基于类的代理被创建。
    如果proxy-target-class 属性值被设置为true，那么基于类的代理将起作用（这时需要cglib库）。
    如果proxy-target-class属值被设置为false或者这个属性被省略，那么标准的JDK 基于接口的代
    我们是基于接口的
    -->
    <tx:annotation-driven transaction-manager="transactionManager" />

    <!-- 配置哪些方法需要事务管理器进行管理 -->
    <tx:advice id="serviceMethodAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="load*" read-only="true"/>
            <tx:method name="query*" read-only="true"/>
            <tx:method name="list*" read-only="true"/>
            <tx:method name="sel*" read-only="true"/>
            <tx:method name="find*" read-only="true"/>

            <tx:method name="*" />
        </tx:attributes>
    </tx:advice>
    <!-- AOP来管理监控哪些类下的那些方法有事务 -->
    <aop:aspectj-autoproxy/>

    <aop:config>
        <!-- 切入点 -->
        <aop:pointcut expression="execution(* com..service.*Service.*(..))" id="servicePointCut"/>
        <aop:advisor advice-ref="serviceMethodAdvice" pointcut-ref="servicePointCut"/>
    </aop:config>

    <!-- [可选]JdbcTemplate -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>


</beans>
